{"numFailedTestSuites":1,"numFailedTests":11,"numPassedTestSuites":0,"numPassedTests":4,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":15,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1745649443222,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["User API Endpoints"],"duration":126,"failureDetails":[],"failureMessages":[],"fullName":"User API Endpoints POST /api/add-user should add a new user","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"POST /api/add-user should add a new user"},{"ancestorTitles":["User API Endpoints"],"duration":21,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:117:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"User API Endpoints GET /api/get-user should return user data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"GET /api/get-user should return user data"},{"ancestorTitles":["Transaction API Endpoints"],"duration":65,"failureDetails":[{"matcherResult":{"actual":500,"expected":200,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:136:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Transaction API Endpoints POST /api/record-transaction should record a transaction","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"POST /api/record-transaction should record a transaction"},{"ancestorTitles":["Transaction API Endpoints"],"duration":14,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:145:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Transaction API Endpoints GET /api/transactions-by-date should return transactions for a specific date","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"GET /api/transactions-by-date should return transactions for a specific date"},{"ancestorTitles":["Transaction API Endpoints"],"duration":69,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:153:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Transaction API Endpoints GET /api/analytics should return transaction analytics","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"GET /api/analytics should return transaction analytics"},{"ancestorTitles":["Transaction API Endpoints"],"duration":18,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:161:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Transaction API Endpoints GET /api/monitoring should return monitoring data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"GET /api/monitoring should return monitoring data"},{"ancestorTitles":["Blockchain API Endpoints"],"duration":7,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:172:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Blockchain API Endpoints GET /api/user-points should return user points","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"GET /api/user-points should return user points"},{"ancestorTitles":["Blockchain API Endpoints"],"duration":5,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:181:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Blockchain API Endpoints GET /api/free-wash-status should return free wash status","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"GET /api/free-wash-status should return free wash status"},{"ancestorTitles":["Blockchain API Endpoints"],"duration":42,"failureDetails":[],"failureMessages":[],"fullName":"Blockchain API Endpoints POST /api/update-nft-frame should update NFT frame","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"POST /api/update-nft-frame should update NFT frame"},{"ancestorTitles":["Blockchain API Endpoints"],"duration":73,"failureDetails":[{"matcherResult":{"actual":400,"expected":200,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 400","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 400\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:202:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Blockchain API Endpoints POST /api/sign-redeem should generate EIP-712 signature","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"POST /api/sign-redeem should generate EIP-712 signature"},{"ancestorTitles":["Blockchain API Endpoints"],"duration":14,"failureDetails":[{"matcherResult":{"actual":500,"expected":200,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:211:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Blockchain API Endpoints GET /api/activity-log should return activity log","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"GET /api/activity-log should return activity log"},{"ancestorTitles":["Blockchain API Endpoints"],"duration":7,"failureDetails":[{"matcherResult":{"expected":true,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: true\nReceived: undefined\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:220:35)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Blockchain API Endpoints GET /api/active-free-washes should return active free wash users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"failed","title":"GET /api/active-free-washes should return active free wash users"},{"ancestorTitles":["Blockchain API Endpoints"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Blockchain API Endpoints POST /api/add-admin should add a new admin","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"POST /api/add-admin should add a new admin"},{"ancestorTitles":["Blockchain API Endpoints"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Blockchain API Endpoints POST /api/remove-admin should remove an admin","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"POST /api/remove-admin should remove an admin"},{"ancestorTitles":["Price API Endpoints"],"duration":7,"failureDetails":[{"matcherResult":{"actual":500,"expected":200,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 200\nReceived: 500\n    at Object.toBe (/root/ago-wash-backend/tests/mock-api.test.js:252:33)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"Price API Endpoints GET /api/prices should return service prices","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"failed","title":"GET /api/prices should return service prices"}],"endTime":1745649447884,"message":"  ● User API Endpoints › GET /api/get-user should return user data\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      115 |       \n      116 |     expect(response.statusCode).toBe(200);\n    > 117 |     expect(response.body.success).toBe(true);\n          |                                   ^\n      118 |   });\n      119 | });\n      120 |\n\n      at Object.toBe (tests/mock-api.test.js:117:35)\n\n  ● Transaction API Endpoints › POST /api/record-transaction should record a transaction\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      134 |       .send(transactionData);\n      135 |       \n    > 136 |     expect(response.statusCode).toBe(200);\n          |                                 ^\n      137 |     expect(response.body.success).toBe(true);\n      138 |   });\n      139 |   \n\n      at Object.toBe (tests/mock-api.test.js:136:33)\n\n  ● Transaction API Endpoints › GET /api/transactions-by-date should return transactions for a specific date\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      143 |       \n      144 |     expect(response.statusCode).toBe(200);\n    > 145 |     expect(response.body.success).toBe(true);\n          |                                   ^\n      146 |   });\n      147 |   \n      148 |   test('GET /api/analytics should return transaction analytics', async () => {\n\n      at Object.toBe (tests/mock-api.test.js:145:35)\n\n  ● Transaction API Endpoints › GET /api/analytics should return transaction analytics\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      151 |       \n      152 |     expect(response.statusCode).toBe(200);\n    > 153 |     expect(response.body.success).toBe(true);\n          |                                   ^\n      154 |   });\n      155 |   \n      156 |   test('GET /api/monitoring should return monitoring data', async () => {\n\n      at Object.toBe (tests/mock-api.test.js:153:35)\n\n  ● Transaction API Endpoints › GET /api/monitoring should return monitoring data\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      159 |       \n      160 |     expect(response.statusCode).toBe(200);\n    > 161 |     expect(response.body.success).toBe(true);\n          |                                   ^\n      162 |   });\n      163 | });\n      164 |\n\n      at Object.toBe (tests/mock-api.test.js:161:35)\n\n  ● Blockchain API Endpoints › GET /api/user-points should return user points\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      170 |       \n      171 |     expect(response.statusCode).toBe(200);\n    > 172 |     expect(response.body.success).toBe(true);\n          |                                   ^\n      173 |     expect(response.body.points).toBe(150);\n      174 |   });\n      175 |   \n\n      at Object.toBe (tests/mock-api.test.js:172:35)\n\n  ● Blockchain API Endpoints › GET /api/free-wash-status should return free wash status\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      179 |       \n      180 |     expect(response.statusCode).toBe(200);\n    > 181 |     expect(response.body.success).toBe(true);\n          |                                   ^\n      182 |     expect(response.body.active).toBe(true);\n      183 |   });\n      184 |   \n\n      at Object.toBe (tests/mock-api.test.js:181:35)\n\n  ● Blockchain API Endpoints › POST /api/sign-redeem should generate EIP-712 signature\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 400\n\n      200 |       });\n      201 |       \n    > 202 |     expect(response.statusCode).toBe(200);\n          |                                 ^\n      203 |     expect(response.body.success).toBe(true);\n      204 |     expect(response.body.signature).toBe('0xsignature');\n      205 |   });\n\n      at Object.toBe (tests/mock-api.test.js:202:33)\n\n  ● Blockchain API Endpoints › GET /api/activity-log should return activity log\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      209 |       .get('/api/activity-log?userAddress=0x1234567890123456789012345678901234567890&page=1&limit=10');\n      210 |       \n    > 211 |     expect(response.statusCode).toBe(200);\n          |                                 ^\n      212 |     expect(response.body.success).toBe(true);\n      213 |   });\n      214 |   \n\n      at Object.toBe (tests/mock-api.test.js:211:33)\n\n  ● Blockchain API Endpoints › GET /api/active-free-washes should return active free wash users\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: true\n    Received: undefined\n\n      218 |       \n      219 |     expect(response.statusCode).toBe(200);\n    > 220 |     expect(response.body.success).toBe(true);\n          |                                   ^\n      221 |   });\n      222 |   \n      223 |   test('POST /api/add-admin should add a new admin', async () => {\n\n      at Object.toBe (tests/mock-api.test.js:220:35)\n\n  ● Price API Endpoints › GET /api/prices should return service prices\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 200\n    Received: 500\n\n      250 |       .get('/api/prices');\n      251 |       \n    > 252 |     expect(response.statusCode).toBe(200);\n          |                                 ^\n      253 |     expect(response.body.success).toBe(true);\n      254 |   });\n      255 | });\n\n      at Object.toBe (tests/mock-api.test.js:252:33)\n","name":"/root/ago-wash-backend/tests/mock-api.test.js","startTime":1745649443295,"status":"failed","summary":""}],"wasInterrupted":false}
